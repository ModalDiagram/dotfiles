#!/bin/bash

PACKAGES="libinput libinput_wayland onedrive firefox-css styluslabs"

usage() {
    echo "Usage:"
    echo "stow_install [-n] [-N|--note] [-t|--target target] [-D] [parent-directory|-p][packages]"
    echo "Options:"
    echo "-n : dry-run, no action. Run as normally, but do not modify file system"
    echo "-N : No action, prints the note of each package instead"
    echo '-t : set target, given by README, but can be set if you want to install somewhere else'
    echo "-D : uninstall instead of installing"
    echo "-p : set parent directory, -p defaults to $ONEDRIVE/dotfiles, but can be modified to source from somewhere else"
    echo ""
    echo "Specify packages to install as final arguments"
    echo "All packages are: $PACKAGES"
    echo ""
}

while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
	-t|--target)
	    target="$2"
	    shift
	    ;;
	-n|--dry-run)
	    TRAIL="-n"
	    ;;
  -N|--note)
	    INFO="y"
 	    ;;
	-p|--uninstall|--delete)
	    DIR=/data/OneDrive/dotfiles
	    shift
	    break
	    ;;
	-D|--uninstall|--delete)
	    UNINSTALL="-D"
	    ;;
	-h|--help|-?)
	    usage
	    exit
	    ;;
	*)  DIR=$1
	    shift
	    break
	;;
    esac
    shift
done
cd "$DIR"

while [[ $# -gt 0 ]]; do
  file="$1/README.md"
  if [[ -f "$file" ]]; then
    ignore=$(jq .ignore $file)
    ignore=${ignore//\"/}
    if [[ -z "$target" ]]; then
      target="$(jq .target $file)"
      target=${target//\"/}
    fi
    note="$(jq .note $file)"
    #echo "$PWD"
    if [[ "$target" != "null" && -d "$target" ]]; then
      if [[ "$INFO" == "y" ]]; then
        printf "Note del pacchetto $1: $note\n\n"
      else
        stow --ignore "$ignore" $TRAIL -t "$target" $UNINSTALL "$1/"
      fi
    else
      echo "Target: $target"
      printf "Target del pacchetto $1 non trovata. Eventuali note: $note\n"
    fi
  else
    echo "README non trovato\n"
  fi
  shift
done
