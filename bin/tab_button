#!/bin/bash

# la funzione controlla che non ci sia un'altra istanza di backup attiva.
# Se c'e', esiste il file /tmp/backup_xournal e al suo interno ha il PID del processo; controlla poi che il processo sia effettivamente attivo (potrebbe essere rimasto il file per un'interruzione improvvisa)
controlla_in_corso(){
  if [[ -f "$file" ]]; then
    # echo "file esiste"
    pid=$(cat "$file")
    if ps -p $pid >> /dev/null; then
      return 1 # torna 1 se il processo esiste, 0 altrimenti
    fi
  fi
  return 0
}

# la funziona copia il PID del processo nel file /tmp/backup_xournal
salva_pid(){
  echo $$ > $file;
}

# controllo se il processo esiste, altrimenti lo salvo
file=/tmp/tab_button
controlla_in_corso
if [[ $? -gt 0 ]]; then
  echo "processo esiste"
  exit
else
  echo "salvataggio pid"
  salva_pid
fi

set -e


trap "echo controllo e termino; exit" SIGINT
trap "echo controllo e termino; exit" SIGTERM
pressed_btn=()
tabdev=$(libinput list-devices | grep -i -A1 "HUION huion tablet Pad" | awk '/event[0-9]+$/{print $2}')

# Leggo ogni riga di libinput
while IFS= read -r line; do
  # echo $line
  # Prendo il numero del bottone premuto
  button=${line#*s}
  button=${button#*"  "}
  button=${button:0:1}

  # Se è stato premuto, cerco la combinazione legata in base all'app focussata e la premo
  if [[ "$line" == *pressed* ]]; then
    custom_btn=$(get_app_bindings tab$button)
    # echo "premendo ${custom_btn[@]}"
    # comb=${btnbind[$button]}
    for key in $custom_btn; do
      ydotool key $key:1
      pressed_btn+=($key) # Tengo una lista dei bottoni premuti per alzarli dopo
    done
  else
    # Se è stato rilasciato alzo tutti i bottoni (avrei problemi se premessi due bottoni contemporaneamente ma non succede)
    # echo "rilasciato $button"
    # echo "rilasciando ${pressed_btn[@]}"
    for key in ${pressed_btn[@]}; do
      ydotool key $key:0
    done
    pressed_btn=()
  fi
done < <(stdbuf -o0 libinput debug-events --device "$tabdev")
